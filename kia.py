# -*- coding: utf-8 -*-
# kia 5.0
# nobrainer tts, konme akuru+fili = audioclip, on submit join all and play
# index.txt - indexes of audio clips/akuru_fili
# adu.bin - all audio clips combined
# DONT USE SPACES

import os
import wave

k_a=os.path.realpath(__file__).split("/")
k_p="/".join(k_a[:-1])+"/"
k_adufile=open(k_p+"adu.bin", "rb")
k_adu=k_adufile.read()
k_adufile.close()
k_afili=['\x80\xa6','\x80\xa7','\x80\xa8','\x80\xa9','\x80\xaa','\x80\xab','\x80\xac','\x80\xad','\x80\xae','\x80\xaf','\x80\xb0','\x81\xa6','\x81\xa7','\x81\xa8','\x81\xa9','\x81\xaa','\x81\xab','\x81\xac','\x81\xad','\x81\xae','\x81\xaf','\x81\xb0','\x82\xa6','\x82\xa7','\x82\xa8','\x82\xa9','\x82\xaa','\x82\xab','\x82\xac','\x82\xad','\x82\xae','\x82\xaf','\x82\xb0','\x83\xa6','\x83\xa7','\x83\xa8','\x83\xa9','\x83\xaa','\x83\xab','\x83\xac','\x83\xad','\x83\xae','\x83\xaf','\x83\xb0','\x84\xa6','\x84\xa7','\x84\xa8','\x84\xa9','\x84\xaa','\x84\xab','\x84\xac','\x84\xad','\x84\xae','\x84\xaf','\x84\xb0','\x85\xa6','\x85\xa7','\x85\xa8','\x85\xa9','\x85\xaa','\x85\xab','\x85\xac','\x85\xad','\x85\xae','\x85\xaf','\x85\xb0','\x86\xa6','\x86\xa7','\x86\xa8','\x86\xa9','\x86\xaa','\x86\xab','\x86\xac','\x86\xad','\x86\xae','\x86\xaf','\x86\xb0','\x87\xa6','\x87\xa7','\x87\xa8','\x87\xa9','\x87\xaa','\x87\xab','\x87\xac','\x87\xad','\x87\xae','\x87\xaf','\x87\xb0','\x88\xa6','\x88\xa7','\x88\xa8','\x88\xa9','\x88\xaa','\x88\xab','\x88\xac','\x88\xad','\x88\xae','\x88\xaf','\x88\xb0','\x89\xa6','\x89\xa7','\x89\xa8','\x89\xa9','\x89\xaa','\x89\xab','\x89\xac','\x89\xad','\x89\xae','\x89\xaf','\x89\xb0','\x8a\xa6','\x8a\xa7','\x8a\xa8','\x8a\xa9','\x8a\xaa','\x8a\xab','\x8a\xac','\x8a\xad','\x8a\xae','\x8a\xaf','\x8a\xb0','\x8b\xa6','\x8b\xa7','\x8b\xa8','\x8b\xa9','\x8b\xaa','\x8b\xab','\x8b\xac','\x8b\xad','\x8b\xae','\x8b\xaf','\x8b\xb0','\x8c\xa6','\x8c\xa7','\x8c\xa8','\x8c\xa9','\x8c\xaa','\x8c\xab','\x8c\xac','\x8c\xad','\x8c\xae','\x8c\xaf','\x8c\xb0','\x8d\xa6','\x8d\xa7','\x8d\xa8','\x8d\xa9','\x8d\xaa','\x8d\xab','\x8d\xac','\x8d\xad','\x8d\xae','\x8d\xaf','\x8d\xb0','\x8e\xa6','\x8e\xa7','\x8e\xa8','\x8e\xa9','\x8e\xaa','\x8e\xab','\x8e\xac','\x8e\xad','\x8e\xae','\x8e\xaf','\x8e\xb0','\x8f\xa6','\x8f\xa7','\x8f\xa8','\x8f\xa9','\x8f\xaa','\x8f\xab','\x8f\xac','\x8f\xad','\x8f\xae','\x8f\xaf','\x8f\xb0','\x90\xa6','\x90\xa7','\x90\xa8','\x90\xa9','\x90\xaa','\x90\xab','\x90\xac','\x90\xad','\x90\xae','\x90\xaf','\x90\xb0','\x91\xa6','\x91\xa7','\x91\xa8','\x91\xa9','\x91\xaa','\x91\xab','\x91\xac','\x91\xad','\x91\xae','\x91\xaf','\x91\xb0','\x92\xa6','\x92\xa7','\x92\xa8','\x92\xa9','\x92\xaa','\x92\xab','\x92\xac','\x92\xad','\x92\xae','\x92\xaf','\x92\xb0','\x93\xa6','\x93\xa7','\x93\xa8','\x93\xa9','\x93\xaa','\x93\xab','\x93\xac','\x93\xad','\x93\xae','\x93\xaf','\x93\xb0','\x94\xa6','\x94\xa7','\x94\xa8','\x94\xa9','\x94\xaa','\x94\xab','\x94\xac','\x94\xad','\x94\xae','\x94\xaf','\x94\xb0','\x95\xa6','\x95\xa7','\x95\xa8','\x95\xa9','\x95\xaa','\x95\xab','\x95\xac','\x95\xad','\x95\xae','\x95\xaf','\x95\xb0','\x96\xa6','\x96\xa7','\x96\xa8','\x96\xa9','\x96\xaa','\x96\xab','\x96\xac','\x96\xad','\x96\xae','\x96\xaf','\x96\xb0','\x97\xa6','\x97\xa7','\x97\xa8','\x97\xa9','\x97\xaa','\x97\xab','\x97\xac','\x97\xad','\x97\xae','\x97\xaf','\x97\xb0']
#hex representation of each akuru+fili for finding clip later

def getkindex():
    m=open(k_p+"index.txt")
    #index of akuru+fili audio clip
    mf=m.read()
    m.close()
    rlol=mf.split(",")
    niu=[]
    for item in rlol:
        niu.append(int(item))
    return niu

k_index=getkindex()

def kia(txt):
    tot=len(txt)/2
    fdata=''
    ix=0
    for i in range(tot):
        xafili=txt[ix]+txt[ix+1]
        if xafili in k_afili:
            inx=k_afili.index(xafili)
            start,end=k_index[inx],k_index[inx+1]
            fdata+=k_adu[start:end]
        ix+=2
    n=wave.open(k_p+"test.wav", "w")
    n.setnchannels(1)
    n.setsampwidth(2)
    n.setframerate(22050)
    n.setcomptype('NONE', 'not compressed')
    n.writeframes(fdata)
    n.close()
    kianvy()

def kianvy():
    cmd = "aplay "+k_p+"test.wav"
    os.system(cmd)

gud=True
# interactive test console..
while gud:
    tx=raw_input("enter thaana: ")
    if tx != "x": # english x, change language
        tx=tx.replace("\xde", "")
        tx=tx.replace(" ", "  ")
        if os.path.exists(k_p+"test.wav"):
            os.remove(k_p+"test.wav")
        kia(tx)
    else:
        gud=False

if os.path.exists(k_p+"test.wav"):
    os.remove(k_p+"test.wav")

print "terminated!"
